{
    "PolicyVersion": {
        "Document": {
            "Version": "2012-10-17",
            "Statement": [
                {
                    "Effect": "Allow",
                    "Action": [
                        "application-autoscaling:DeleteScalingPolicy",
                        "application-autoscaling:DeregisterScalableTarget",
                        "application-autoscaling:DescribeScalableTargets",
                        "application-autoscaling:DescribeScalingActivities",
                        "application-autoscaling:DescribeScalingPolicies",
                        "application-autoscaling:PutScalingPolicy",
                        "application-autoscaling:RegisterScalableTarget",
                        "appmesh:ListMeshes",
                        "appmesh:ListVirtualNodes",
                        "appmesh:DescribeVirtualNode",
                        "autoscaling:UpdateAutoScalingGroup",
                        "autoscaling:CreateAutoScalingGroup",
                        "autoscaling:CreateLaunchConfiguration",
                        "autoscaling:DeleteAutoScalingGroup",
                        "autoscaling:DeleteLaunchConfiguration",
                        "autoscaling:Describe*",
                        "cloudformation:CreateStack",
                        "cloudformation:DeleteStack",
                        "cloudformation:DescribeStack*",
                        "cloudformation:UpdateStack",
                        "cloudwatch:DescribeAlarms",
                        "cloudwatch:DeleteAlarms",
                        "cloudwatch:GetMetricStatistics",
                        "cloudwatch:PutMetricAlarm",
                        "codedeploy:CreateApplication",
                        "codedeploy:CreateDeployment",
                        "codedeploy:CreateDeploymentGroup",
                        "codedeploy:GetApplication",
                        "codedeploy:GetDeployment",
                        "codedeploy:GetDeploymentGroup",
                        "codedeploy:ListApplications",
                        "codedeploy:ListDeploymentGroups",
                        "codedeploy:ListDeployments",
                        "codedeploy:StopDeployment",
                        "codedeploy:GetDeploymentTarget",
                        "codedeploy:ListDeploymentTargets",
                        "codedeploy:GetDeploymentConfig",
                        "codedeploy:GetApplicationRevision",
                        "codedeploy:RegisterApplicationRevision",
                        "codedeploy:BatchGetApplicationRevisions",
                        "codedeploy:BatchGetDeploymentGroups",
                        "codedeploy:BatchGetDeployments",
                        "codedeploy:BatchGetApplications",
                        "codedeploy:ListApplicationRevisions",
                        "codedeploy:ListDeploymentConfigs",
                        "codedeploy:ContinueDeployment",
                        "sns:ListTopics",
                        "lambda:ListFunctions",
                        "ec2:AssociateRouteTable",
                        "ec2:AttachInternetGateway",
                        "ec2:AuthorizeSecurityGroupIngress",
                        "ec2:CancelSpotFleetRequests",
                        "ec2:CreateInternetGateway",
                        "ec2:CreateLaunchTemplate",
                        "ec2:CreateRoute",
                        "ec2:CreateRouteTable",
                        "ec2:CreateSecurityGroup",
                        "ec2:CreateSubnet",
                        "ec2:CreateVpc",
                        "ec2:DeleteLaunchTemplate",
                        "ec2:DeleteSubnet",
                        "ec2:DeleteVpc",
                        "ec2:Describe*",
                        "ec2:DetachInternetGateway",
                        "ec2:DisassociateRouteTable",
                        "ec2:ModifySubnetAttribute",
                        "ec2:ModifyVpcAttribute",
                        "ec2:RunInstances",
                        "ec2:RequestSpotFleet",
                        "elasticfilesystem:DescribeFileSystems",
                        "elasticfilesystem:DescribeAccessPoints",
                        "elasticloadbalancing:CreateListener",
                        "elasticloadbalancing:CreateLoadBalancer",
                        "elasticloadbalancing:CreateRule",
                        "elasticloadbalancing:CreateTargetGroup",
                        "elasticloadbalancing:DeleteListener",
                        "elasticloadbalancing:DeleteLoadBalancer",
                        "elasticloadbalancing:DeleteRule",
                        "elasticloadbalancing:DeleteTargetGroup",
                        "elasticloadbalancing:DescribeListeners",
                        "elasticloadbalancing:DescribeLoadBalancers",
                        "elasticloadbalancing:DescribeRules",
                        "elasticloadbalancing:DescribeTargetGroups",
                        "ecs:*",
                        "events:DescribeRule",
                        "events:DeleteRule",
                        "events:ListRuleNamesByTarget",
                        "events:ListTargetsByRule",
                        "events:PutRule",
                        "events:PutTargets",
                        "events:RemoveTargets",
                        "iam:ListAttachedRolePolicies",
                        "iam:ListInstanceProfiles",
                        "iam:ListRoles",
                        "logs:CreateLogGroup",
                        "logs:DescribeLogGroups",
                        "logs:FilterLogEvents",
                        "route53:GetHostedZone",
                        "route53:ListHostedZonesByName",
                        "route53:CreateHostedZone",
                        "route53:DeleteHostedZone",
                        "route53:GetHealthCheck",
                        "servicediscovery:CreatePrivateDnsNamespace",
                        "servicediscovery:CreateService",
                        "servicediscovery:GetNamespace",
                        "servicediscovery:GetOperation",
                        "servicediscovery:GetService",
                        "servicediscovery:ListNamespaces",
                        "servicediscovery:ListServices",
                        "servicediscovery:UpdateService",
                        "servicediscovery:DeleteService"
                    ],
                    "Resource": [
                        "*"
                    ]
                },
                {
                    "Effect": "Allow",
                    "Action": [
                        "ssm:GetParametersByPath",
                        "ssm:GetParameters",
                        "ssm:GetParameter"
                    ],
                    "Resource": "arn:aws:ssm:*:*:parameter/aws/service/ecs*"
                },
                {
                    "Effect": "Allow",
                    "Action": [
                        "ec2:DeleteInternetGateway",
                        "ec2:DeleteRoute",
                        "ec2:DeleteRouteTable",
                        "ec2:DeleteSecurityGroup"
                    ],
                    "Resource": [
                        "*"
                    ],
                    "Condition": {
                        "StringLike": {
                            "ec2:ResourceTag/aws:cloudformation:stack-name": "EC2ContainerService-*"
                        }
                    }
                },
                {
                    "Action": "iam:PassRole",
                    "Effect": "Allow",
                    "Resource": [
                        "*"
                    ],
                    "Condition": {
                        "StringLike": {
                            "iam:PassedToService": "ecs-tasks.amazonaws.com"
                        }
                    }
                },
                {
                    "Action": "iam:PassRole",
                    "Effect": "Allow",
                    "Resource": [
                        "arn:aws:iam::*:role/ecsInstanceRole*"
                    ],
                    "Condition": {
                        "StringLike": {
                            "iam:PassedToService": [
                                "ec2.amazonaws.com",
                                "ec2.amazonaws.com.cn"
                            ]
                        }
                    }
                },
                {
                    "Action": "iam:PassRole",
                    "Effect": "Allow",
                    "Resource": [
                        "arn:aws:iam::*:role/ecsAutoscaleRole*"
                    ],
                    "Condition": {
                        "StringLike": {
                            "iam:PassedToService": [
                                "application-autoscaling.amazonaws.com",
                                "application-autoscaling.amazonaws.com.cn"
                            ]
                        }
                    }
                },
                {
                    "Effect": "Allow",
                    "Action": "iam:CreateServiceLinkedRole",
                    "Resource": "*",
                    "Condition": {
                        "StringLike": {
                            "iam:AWSServiceName": [
                                "ecs.amazonaws.com",
                                "spot.amazonaws.com",
                                "spotfleet.amazonaws.com",
                                "ecs.application-autoscaling.amazonaws.com",
                                "autoscaling.amazonaws.com"
                            ]
                        }
                    }
                }
            ]
        },
        "VersionId": "v17",
        "IsDefaultVersion": true,
        "CreateDate": "2020-03-23T19:56:42Z"
    }
}
