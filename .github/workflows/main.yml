name: 'Terraform GitHub Actions'

on:
  push:
    branches:
    - master

env:
  tf_version: 'latest'
  tf_working_dir: './automation/tf-fargate'
  env: 'dev'
  project: 'mamip'
  aws_region: 'eu-west-1'
  artifacts_bucket: 'mamip-artifacts'

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@master

      - name: Update runbook artifact
        run: aws s3 cp ./automation/runbook.sh 's3://${{ env.project }}-artifacts/'

      - name: AWS IAM Assume Role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.REGION }}
          role-to-assume: ${{ secrets.ROLE_TO_ASSUME }}
          role-duration-seconds: 1200
          role-session-name: GH-Actions-${{ env.project }}

      - name: 'Terraform Init'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: ${{ env.tf_version }}
          tf_actions_subcommand: 'init'
          tf_actions_working_dir: ${{ env.tf_working_dir }}
          tf_actions_comment: false
          args: '-backend-config="bucket=${{ secrets.TF_STATE_S3_BUCKET }}" -backend-config="key=mamip/terraform.tfstate"'

      - name: 'Terraform Validate'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: ${{ env.tf_version }}
          tf_actions_subcommand: 'validate'
          tf_actions_working_dir: ${{ env.tf_working_dir }}
          tf_actions_comment: false

      - name: 'Terraform Plan'
        id: plan
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: ${{ env.tf_version }}
          tf_actions_subcommand: 'plan'
          tf_actions_working_dir: ${{ env.tf_working_dir }}
          tf_actions_comment: false
          args: '-var="env=dev" -var="artifacts_bucket=${{ env.artifacts_bucket }}"'

      - name: 'Terraform Apply'
        if: steps.plan.outputs.tf_actions_plan_has_changes == 'true'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: ${{ env.tf_version }}
          tf_actions_subcommand: 'apply'
          tf_actions_working_dir: ${{ env.tf_working_dir }}
          tf_actions_comment: false
          args: '-var="env=dev"'